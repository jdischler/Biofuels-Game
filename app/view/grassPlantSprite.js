/*
 * File: app/view/GrassPlantSprite.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.GrassPlantSprite', {
 
    //-----------------------------------------------------------------------
    constructor: function (config) {
    	
//        this.callSuper(arguments);
        
    	this.randomSpriteConfigList = Array([{        
			type: 'image',
			src: 'app/assets/grass_plant.png',
			width: 30,
			height: 50
		}],
		[{
			type: 'image',
			src: 'app/assets/grass_plant_2.png',
			width: 30,
			height: 50
		}]);
    },
    
    //-----------------------------------------------------------------------
    addToSurface: function(surface, atX, atY, duration) {

		var randomSpriteConfig = this.randomSpriteConfigList[Math.floor(Math.random() * this.randomSpriteConfigList.length)];
		
    	// TODO: if this.sprites already exists, clear?
//    	if (this.sprites
  		var result = surface.add(randomSpriteConfig);
  		this.sprites = result;
		for (var index = 0; index < result.length; index++) {
			result[index].setAttributes({
				translate: {
					x: atX, 
					y: atY
				}}, false);
		}
    	for (var index = 0; index < result.length; index++) {
			result[index].animate({
					duration: duration,
					from: {
						scale: {
							x: 0.2,
							y: 0.2
						},
						translate: {
							x: atX,
							y: atY + 20 * 0.8 
						}
					},
					to: {
						scale: {
							x: 1,
							y: 1
						},
						translate: {
							x: atX,
							y: atY
						}
					}
			});
    	}    	
    },

    //-----------------------------------------------------------------------
    removeFromSurface: function() {
    	if (!this.sprites) return;

    	var result = this.sprites;
    	for (var index = 0; index < result.length; index++) {
    		// FIXME: Destroy?
    		result[index].remove();
    	}
    	this.sprites = null;
    }

});
